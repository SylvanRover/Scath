<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Determines whether the light is on or not

torch = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Character controller

var t, a;

// Updating the speed of the room
c_speed  = 6*(60/max(fps,1)); // Character speed
c_rspeed = 9*(60/max(fps,1)); // Character rotation
friction = 3*(60/max(fps,1)); // Character friction

// Character displacement
if keyboard_check(vk_up)    motion_add(90, c_speed);
if keyboard_check(vk_down)  motion_add(270,c_speed);
if keyboard_check(vk_right) motion_add(0,  c_speed);
if keyboard_check(vk_left)  motion_add(180,c_speed);
speed = min(speed,c_speed);

// Limitation of movement at the ends of the room
if x&gt;room_width x=room_width; if x&lt;0 x=0; if y&gt;room_height y=room_height; if y&lt;0 y=0;

// Character Rotation
if point_distance(x,y,mouse_x,mouse_y) &gt; 15
{
t = point_direction(x+lengthdir_x(12,image_angle-90),y+lengthdir_y(12,image_angle-90),mouse_x,mouse_y);
a = t-image_angle;

if abs(a) &lt; 180 image_angle += c_rspeed*sign(a) else image_angle -= c_rspeed*sign(a);
if abs(a) &lt;= c_rspeed image_angle = t;

if image_angle &gt; 360 image_angle = 0;
if image_angle &lt; 0   image_angle = 360;
}

// Enable/Disable the torch (flashlight)
if keyboard_check_pressed(ord('L')) or mouse_check_button_pressed(mb_left) torch = !torch;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision with an obstacle , the character stops
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creates the light object generating the flashlight
with instance_create(x,y,obj_light_torch)
{parent = other.id;
 sl_light_xscale       = 2.8;
 sl_light_yscale       = 2.8;
 sl_light_shadowfactor = 1.03;
 SL_light_cast_obj(obj_npc,spr_character_smask)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,21</point>
    <point>28,28</point>
  </PhysicsShapePoints>
</object>
