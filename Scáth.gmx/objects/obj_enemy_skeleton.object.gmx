<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_skeleton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_zDepth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Variables

phy_fixed_rotation = true;
hp_current = 100;
hp_max = 100;
stamina_current = 100;
stamina_max = 100;
inRange = false;
los = 60;
attackRange = 12;
block = false;
attackR = false;
attackL = false;
attackSpr = false;
alarm[0] = 1;
damage = 20;
attackSpeed = 32;
d = (direction + 45) div 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set attacks to false

attackL = false;
attackR = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attack Sprite

attackSpr = false;

if (phy_speed_x = 0 &amp;&amp; phy_speed_y = 0)
{
    switch (d) 
    {     
        case 0: sprite_index = spr_enemy_skeleton; break;    
        case 1: sprite_index = spr_enemy_skeleton;  break;    
        case 2: sprite_index = spr_enemy_skeleton; break;    
        case 3: sprite_index = spr_enemy_skeleton;  break; 
    }
    
    if (direction &gt;= 315) sprite_index = spr_enemy_skeleton;
}

if (phy_speed_x != 0 || phy_speed_y != 0)
    {
        switch (d) 
        {     
            case 0: sprite_index = spr_enemy_skeleton; break;    
            case 1: sprite_index = spr_enemy_skeleton;  break;    
            case 2: sprite_index = spr_enemy_skeleton; break;    
            case 3: sprite_index = spr_enemy_skeleton;  break; 
        }
        
        if (direction &gt;= 315 &amp;&amp; !attackR) sprite_index = spr_enemy_skeleton;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_depthCorrection</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death

if (hp_current &lt;= 0)
{
    obj_player_controller.killCount += 1;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

//Sprite Directions
    
    if ((phy_speed_x = 0 &amp;&amp; phy_speed_y = 0) &amp;&amp; !attackR)
    {
        switch (d) 
        {     
            case 0: sprite_index = spr_enemy_skeleton; break;    
            case 1: sprite_index = spr_enemy_skeleton;  break;    
            case 2: sprite_index = spr_enemy_skeleton; break;    
            case 3: sprite_index = spr_enemy_skeleton;  break; 
        }
        
        if (direction &gt;= 315) sprite_index = spr_enemy_skeleton;
    }
    
    if ((phy_speed_x != 0 || phy_speed_y != 0) &amp;&amp; !attackR)
    {
        switch (d) 
        {     
            case 0: sprite_index = spr_enemy_skeleton; break;    
            case 1: sprite_index = spr_enemy_skeleton;  break;    
            case 2: sprite_index = spr_enemy_skeleton; break;    
            case 3: sprite_index = spr_enemy_skeleton;  break; 
        }
        
        if (direction &gt;= 315 &amp;&amp; !attackR) sprite_index = spr_enemy_skeleton;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Combat

if (collision_ellipse(x-(los), y-((los/2)+8), x+(los), y+((los/2)+8), obj_player, false, true))
    {
        inRange = true;
    }
    else
    {
        inRange = false;
    }

if (inRange)
{
    dir = point_direction(x, y, obj_player.x, obj_player.y);
    phy_speed_x = lengthdir_x(1.2, dir); //SPEED is the speed you want to move at.
    phy_speed_y = lengthdir_y(1, dir);
    direction = point_direction(x, y, obj_player.x, obj_player.y);
}

if (collision_ellipse(x-(attackRange), y-(attackRange/2), x+(attackRange), y+(attackRange/2)-16, obj_player, false, true))
    {
        phy_speed_x = 0;
        phy_speed_y = 0;
        
        if (direction &gt;= 0 &amp;&amp; direction &lt; 45 || direction &gt; 315) // Right
        {
                if (!attackR)
                {
                    attackR = true;
                    alarm[1] = attackSpeed;
                    alarm[0]=4;
                    attackSpr = true
                    instance_create(x+16, y-12, obj_enemy_attack);
                }
                
                if (attackSpr)
                {
                    sprite_index = spr_enemy_attack_right;
                    attackSpr = false;
                }
        
        }
        
        if (direction &gt;= 45 &amp;&amp; direction &lt;= 135) // Up
        {
                if (!attackR)
                {
                    attackR = true;
                    attackSpr = true;
                    alarm[1] = attackSpeed;
                    alarm[0]=4;
                    if (attackSpr) instance_create(x, y-16, obj_enemy_attack);
                }
                
                if (attackSpr)
                {
                    sprite_index = spr_enemy_attack_up;
                    attackSpr = false;
                }
        }
        
        if (direction &gt; 135 &amp;&amp; direction &lt; 225) // Left
        {
                if (!attackR)
                {
                    attackR = true;
                    attackSpr = true;
                    alarm[1] = attackSpeed;
                    alarm[0]=4;
                    instance_create(x-16, y-12, obj_enemy_attack);
                }
                
                if (attackSpr)
                {
                    sprite_index = spr_enemy_attack_left;
                    attackSpr = false;
                }
        }
        
        if (direction &gt;= 225 &amp;&amp; direction &lt;= 315) // Down
        {
                if (!attackR)
                {
                    attackR = true;
                    attackSpr = true;
                    alarm[1] = attackSpeed;
                    alarm[0]=4;
                    instance_create(x, y+8, obj_enemy_attack);
                }
                
                if (attackSpr)
                {
                    sprite_index = spr_enemy_attack_down;
                    attackSpr = false;
                }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage Collision
if (collision_ellipse(x-(attackRange*2), y-((attackRange)+8), x+(attackRange*2), y+((attackRange)+8), obj_player_attack, false, true))
{
    hp_current -= obj_player.damage;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy Enemy Attack

if (collision_ellipse(x-(attackRange*2), y-((attackRange)+8), x+(attackRange*2), y+((attackRange)+8), obj_player_attack, false, true))
{
    hp_current -= obj_player.damage;
    obj_player_attack.attackHit = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_env">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Health Bar

draw_self();
draw_healthbar(phy_position_x-8,phy_position_y-33,phy_position_x+8,phy_position_y-35,hp_current,c_black,c_maroon,c_red,0,true,false)
//draw_set_colour(c_red)
//draw_ellipse(x-(attackRange), y-(attackRange/2), x+(attackRange), y+(attackRange/2)-16, true);
//draw_set_colour(c_black);
//draw_ellipse(x-(los), y-((los/2)+8), x+(los), y+((los/2)+8), true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>25,24</point>
    <point>25,30</point>
    <point>16,32</point>
    <point>7,30</point>
    <point>7,24</point>
    <point>16,22</point>
  </PhysicsShapePoints>
</object>
